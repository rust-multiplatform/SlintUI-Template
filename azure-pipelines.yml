stages:
  - stage: Linux
    dependsOn: [] # Clears dependencies and allows parallel execution
    pool: 
      vmImage: ubuntu-latest
    jobs:
      - job: Cargo_Check_Debug
        dependsOn: []
        steps:
          - bash: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable --profile complete -y
            displayName: Install Rust
          
          - bash: rustc --version && cargo --version
            displayName: Print Rust & Cargo versions

          - bash: cargo check --verbose --package platform_linux
            displayName: Cargo Check (Debug)

      - job: Cargo_Check_Release
        dependsOn: []
        steps:
          - bash: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable --profile complete -y
            displayName: Install Rust
          
          - bash: rustc --version && cargo --version
            displayName: Print Rust & Cargo versions

          - bash: cargo check --verbose --package platform_linux --release
            displayName: Cargo Check (Release)

      - job: Cargo_Build_Debug
        dependsOn: []
        steps:
          - bash: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable --profile complete -y
            displayName: Install Rust
          
          - bash: rustc --version && cargo --version
            displayName: Print Rust & Cargo versions

          - bash: cargo build --verbose --package platform_linux
            displayName: Cargo Build (Debug)
          
          - publish: target/
            artifact: Upload Linux Artifacts (Debug)

      - job: Cargo_Build_Release
        dependsOn: []
        steps:
          - bash: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable --profile complete -y
            displayName: Install Rust
          
          - bash: rustc --version && cargo --version
            displayName: Print Rust & Cargo versions

          - bash: cargo build --verbose --package platform_linux --release
            displayName: Cargo Build (Release)

          - publish: target/
            artifact: Upload Linux Artifacts (Release)

      - job: Cargo_Test_Debug
        dependsOn: []
        steps:
          - bash: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable --profile complete -y
            displayName: Install Rust
          
          - bash: rustc --version && cargo --version
            displayName: Print Rust & Cargo versions

          - bash: cargo test --verbose --no-default-features --no-fail-fast --package platform_linux
            displayName: Cargo Test (Debug)

      - job: Cargo_Test_Release
        dependsOn: []
        steps:
          - bash: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable --profile complete -y
            displayName: Install Rust
          
          - bash: rustc --version && cargo --version
            displayName: Print Rust & Cargo versions

          - bash: cargo test --verbose --no-default-features --no-fail-fast --package platform_linux --release
            displayName: Cargo Test (Release)



  - stage: Windows
    dependsOn: [] # Clears dependencies and allows parallel execution
    pool: 
      vmImage: windows-latest
    jobs:
      - job: Cargo_Check_Debug
        dependsOn: []
        steps:
          - pwsh: Invoke-WebRequest https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe -OutFile rustup-init.exe
            displayName: Download Rustup

          - pwsh: ./rustup-init.exe --default-toolchain stable --profile complete -y
            displayName: Install Rust
          
          - pwsh: rustc --version && cargo --version
            displayName: Print Rust & Cargo versions
            
          - pwsh: cargo check --verbose --package platform_windows
            displayName: Cargo Check (Debug)

      - job: Cargo_Check_Release
        dependsOn: []
        steps:
          - pwsh: Invoke-WebRequest https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe -OutFile rustup-init.exe
            displayName: Download Rustup

          - pwsh: ./rustup-init.exe --default-toolchain stable --profile complete -y
            displayName: Install Rust
          
          - pwsh: rustc --version && cargo --version
            displayName: Print Rust & Cargo versions
            
          - pwsh: cargo check --verbose --package platform_windows --release
            displayName: Cargo Check (Release)

      - job: Cargo_Build_Debug
        dependsOn: []
        steps:
          - pwsh: Invoke-WebRequest https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe -OutFile rustup-init.exe
            displayName: Download Rustup

          - pwsh: ./rustup-init.exe --default-toolchain stable --profile complete -y
            displayName: Install Rust
          
          - pwsh: rustc --version && cargo --version
            displayName: Print Rust & Cargo versions
            
          - pwsh: cargo build --verbose --package platform_windows
            displayName: Cargo Build (Debug)

          - publish: target/
            artifact: Upload Windows Artifacts (Debug)

      - job: Cargo_Build_Release
        dependsOn: []
        steps:
          - pwsh: Invoke-WebRequest https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe -OutFile rustup-init.exe
            displayName: Download Rustup

          - pwsh: ./rustup-init.exe --default-toolchain stable --profile complete -y
            displayName: Install Rust
          
          - pwsh: rustc --version && cargo --version
            displayName: Print Rust & Cargo versions
            
          - pwsh: cargo build --verbose --package platform_windows --release
            displayName: Cargo Build (Release)

          - publish: target/
            artifact: Upload Windows Artifacts (Release)

      - job: Cargo_Test_Debug
        dependsOn: []
        steps:
          - pwsh: Invoke-WebRequest https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe -OutFile rustup-init.exe
            displayName: Download Rustup

          - pwsh: ./rustup-init.exe --default-toolchain stable --profile complete -y
            displayName: Install Rust
          
          - pwsh: rustc --version && cargo --version
            displayName: Print Rust & Cargo versions
            
          - pwsh: cargo test --verbose --no-default-features --no-fail-fast --package platform_windows
            displayName: Cargo Test (Debug)

      - job: Cargo_Test_Release
        dependsOn: []
        steps:
          - pwsh: Invoke-WebRequest https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe -OutFile rustup-init.exe
            displayName: Download Rustup

          - pwsh: ./rustup-init.exe --default-toolchain stable --profile complete -y
            displayName: Install Rust
          
          - pwsh: rustc --version && cargo --version
            displayName: Print Rust & Cargo versions
            
          - pwsh: cargo test --verbose --no-default-features --no-fail-fast --package platform_windows --release
            displayName: Cargo Test (Release)



  - stage: macOS
    dependsOn: [] # Clears dependencies and allows parallel execution
    pool: 
      vmImage: macos-latest
    jobs:
      - job: Cargo_Check_Debug
        dependsOn: []
        steps:
          - bash: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable --profile complete -y
            displayName: Install Rust
          
          - bash: rustc --version && cargo --version
            displayName: Print Rust & Cargo versions

          - bash: cargo check --verbose --package platform_macos
            displayName: Cargo Check (Debug)

      - job: Cargo_Check_Release
        dependsOn: []
        steps:
          - bash: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable --profile complete -y
            displayName: Install Rust
          
          - bash: rustc --version && cargo --version
            displayName: Print Rust & Cargo versions

          - bash: cargo check --verbose --package platform_macos --release
            displayName: Cargo Check (Release)

      - job: Cargo_Build_Debug
        dependsOn: []
        steps:
          - bash: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable --profile complete -y
            displayName: Install Rust
          
          - bash: rustc --version && cargo --version
            displayName: Print Rust & Cargo versions

          - bash: cargo build --verbose --package platform_macos
            displayName: Cargo Build (Debug)
            
          - publish: target/
            artifact: Upload macOS Artifacts (Debug)

      - job: Cargo_Build_Release
        dependsOn: []
        steps:
          - bash: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable --profile complete -y
            displayName: Install Rust
          
          - bash: rustc --version && cargo --version
            displayName: Print Rust & Cargo versions

          - bash: cargo build --verbose --package platform_macos --release
            displayName: Cargo Build (Release)

          - publish: target/
            artifact: Upload macOS Artifacts (Release)

      - job: Cargo_Test_Debug
        dependsOn: []
        steps:
          - bash: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable --profile complete -y
            displayName: Install Rust
          
          - bash: rustc --version && cargo --version
            displayName: Print Rust & Cargo versions

          - bash: cargo test --verbose --no-default-features --no-fail-fast --package platform_macos
            displayName: Cargo Test (Debug)

      - job: Cargo_Test_Release
        dependsOn: []
        steps:
          - bash: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable --profile complete -y
            displayName: Install Rust
          
          - bash: rustc --version && cargo --version
            displayName: Print Rust & Cargo versions

          - bash: cargo test --verbose --no-default-features --no-fail-fast --package platform_macos --release
            displayName: Cargo Test (Release)

  - stage: WebAssembly
    dependsOn: Linux
    pool: 
      vmImage: ubuntu-latest
    jobs:
      - job: Cargo_Build_Debug
        dependsOn: []
        steps:
          - bash: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable --profile complete -y
            displayName: Install Rust
          
          - bash: rustc --version && cargo --version
            displayName: Print Rust & Cargo versions

          - bash: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh 
            displayName: Install WASM-Pack

          - bash: wasm-pack --version
            displayName: Wasm-Pack version
            
          - bash: wasm-pack build --dev platform/webassembly/ --package platform_webassembly
            displayName: Wasm-Pack Build (Debug)
          
          - publish: ./platform/webassembly/pkg
            artifact: Upload WebAssembly Artifacts (Debug)

      - job: Cargo_Build_Release
        dependsOn: []
        steps:
          - bash: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable --profile complete -y
            displayName: Install Rust
          
          - bash: rustc --version && cargo --version
            displayName: Print Rust & Cargo versions

          - bash: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh 
            displayName: Install WASM-Pack

          - bash: wasm-pack --version
            displayName: Wasm-Pack version
            
          - bash: wasm-pack build  platform/webassembly/ --package platform_webassembly
            displayName: Wasm-Pack Build (Release)

          - publish: ./platform/webassembly/pkg
            artifact: Upload WebAssembly Artifacts (Release)
